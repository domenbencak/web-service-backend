<!DOCTYPE html>
<html>
<head>
    <title>Map Example</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        .map-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100vh;
        }

        #map {
            width: 100%;
            height: 400px;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="map-container">
        <svg xmlns="http://www.w3.org/2000/svg" width="130" height="130" viewBox="0 0 24 24"><path d="M18 0c-3.148 0-6 2.553-6 5.702 0 4.682 4.783 5.177 6 12.298 1.217-7.121 6-7.616 6-12.298 0-3.149-2.852-5.702-6-5.702zm0 8c-1.105 0-2-.895-2-2s.895-2 2-2 2 .895 2 2-.895 2-2 2zm-12-3c-2.099 0-4 1.702-4 3.801 0 3.121 3.188 3.451 4 8.199.812-4.748 4-5.078 4-8.199 0-2.099-1.901-3.801-4-3.801zm0 5.333c-.737 0-1.333-.597-1.333-1.333s.596-1.333 1.333-1.333 1.333.596 1.333 1.333-.596 1.333-1.333 1.333zm6 5.775l-3.215-1.078c.365-.634.777-1.128 1.246-1.687l1.969.657 1.92-.64c.388.521.754 1.093 1.081 1.75l-3.001.998zm12 7.892l-6.707-2.427-5.293 2.427-5.581-2.427-6.419 2.427 3.62-8.144c.299.76.554 1.776.596 3.583l-.443.996 2.699-1.021 4.809 2.091.751-3.725.718 3.675 4.454-2.042 3.099 1.121-.461-1.055c.026-.392.068-.78.131-1.144.144-.84.345-1.564.585-2.212l3.442 7.877z"/></svg>
        {{#if session.userId}}
        <h1 class="text-center">Zemljevid vseh voženj:</h1>    
        {{else}}
        <h1 class="text-center">Za več informacij ali statistiko se <a href="/user/register">registrirajte</a> ali se <a href="/user/login">vpišite!</a></h1>
        {{/if}}
        <div id="map"></div>
    </div>

    <script src="https://openlayers.org/en/v6.6.1/build/ol.js"></script>
    <script>
        // Create a map instance
        var map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                })
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([0, 0]),
                zoom: 2
            }),
            controls: ol.control.defaults({ attribution: false })
        });

        // Get the user's current location
        if ("geolocation" in navigator) {
            navigator.geolocation.getCurrentPosition(function (position) {
                // Update the map view with the user's location
                var userLocation = ol.proj.fromLonLat([position.coords.longitude, position.coords.latitude]) ?? ol.proj.fromLonLat(46.55947, 15.63293);
                map.getView().setCenter(userLocation);
                map.getView().setZoom(12);

                // Define the line coordinates
                var lineCoordinates = [
                    userLocation,
                    ol.proj.fromLonLat([userLocation[0] + 0.01, userLocation[1] + 1.01]),
                    ol.proj.fromLonLat([userLocation[0] + 1.02, userLocation[1] + 0.00]),
                ];

                // Create a line feature
                var lineFeature = new ol.Feature({
                    geometry: new ol.geom.LineString(lineCoordinates)
                });

                // Create a vector source and layer
                var vectorSource = new ol.source.Vector({
                    features: [lineFeature]
                });

                var vectorLayer = new ol.layer.Vector({
                    source: vectorSource
                });

                // Add the vector layer to the map
                map.addLayer(vectorLayer);
            });
        }
    </script>
</body>
</html>
