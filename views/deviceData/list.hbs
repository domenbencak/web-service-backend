

{{#each deviceDatas}}
<div class="device-data-box">
  <div class="rounded-form">
    <h2 class="center-text">PODATKI NAPRAVE {{this.user.username}}</h2>
        <h4 class="title-values">ACCELEROMETER VREDNOSTI:</h4>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-x" onclick="toggleAccelerometerValues(this)">Accelerometer X</span>
        </div>
        <ul class="accelerometer-values accelerometer-x">
          {{#each this.accelerometerX}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>
      </li>
      <li>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-y" onclick="toggleAccelerometerValues(this)">Accelerometer Y</span>
        </div>
        <ul class="accelerometer-values accelerometer-y">
          {{#each this.accelerometerY}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>
      </li>
      <li>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-z" onclick="toggleAccelerometerValues(this)">Accelerometer Z</span>
        </div>
        <ul class="accelerometer-values accelerometer-z">
          {{#each this.accelerometerZ}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>
      </li>
      <li>
        <h4 class="title-values">GYROSCOPE VREDNOSTI:</h4>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-x" onclick="toggleGyroscopeValues(this)">Gyroscope X</span>
        </div>
        <ul class="gyroscope-values gyroscope-x">
          {{#each this.gyroscopeX}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>
      </li>
      <li>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-y" onclick="toggleGyroscopeValues(this)">Gyroscope Y</span>
        </div>
        <ul class="gyroscope-values gyroscope-y">
          {{#each this.gyroscopeY}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>
      </li>
      <li>
        <div class="accordion">
          <span class="arrow"></span>
          <span class="axis-title-z" onclick="toggleGyroscopeValues(this)">Gyroscope Z</span>
        </div>
        <ul class="gyroscope-values gyroscope-z">
          {{#each this.gyroscopeZ}}
            <li style="display: none;">{{this}}</li>
          {{/each}}
        </ul>

    <h4 class="title-values">KORDINATI:</h4>
        <h5 class="lat-lon">Latitude: <span class="lat-lon-value">{{this.latitude}}</span></h5>
        <h5 class="lat-lon">Longitude: <span class="lat-lon-value">{{this.longitude}}</span></h5>

    <h4 class="title-values">OCENA: <span class="rating">{{this.rating}}</span></h4>
    <h4 class="title-values">ČAS: <span class="timestamp">{{this.timestamp}}</span></h4>
      </div>
</div>
{{/each}}

<style>
  .arrow {
    display: inline-block;
    width: 0;
    height: 0;
    margin-right: 5px;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 5px solid #000;
    transition: transform 0.3s;
    transform: rotate(0deg);
  }
  .open .arrow {
    transform: rotate(90deg);
  }
  ul.accelerometer-values,
  ul.gyroscope-values {
    list-style-type: none;
  }
  .device-data-box {
    border: 1px solid black;
    margin-bottom: 20px;
    padding: 10px;
    margin-top: 15px;
  }
  .rounded-form {
    border-radius: 0;
    padding: 40px;
    background-color: #ffffff;
    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
  }
  .center-text {
    text-align: center;
    text-transform: uppercase;
    color: #333333;
    margin-bottom: 40px;
  }
  li {
    list-style-type: none;
  }
  .accelerometer-values .gyroscope-values li {
    font-weight: 400;
  }
  .axis-title-x {
    color: red;
    font-weight: 600;
  }
  .axis-title-y {
    color: green;
    font-weight: 600;
  }
  .axis-title-z {
    color: blue;
    font-weight: 600;
  }
  .title-values {
    font-weight: 800;
  }
  .lat-lon {
    color: purple;
    font-weight: 600;
  }
  .lat-lon-value {
    color: black;
    font-weight: 400;
  }
  .rating {
    font-weight: 800;
    display: inline-block;
  }
  .rating.dark-red {
    color: darkred;
    font-weight: 600;
  }
  .rating.red {
    color: red;
    font-weight: 600;
  }
  .rating.yellow {
    color: yellow;
    font-weight: 600;
  }
  .rating.green {
    color: green;
    font-weight: 600;
  }
  .rating.dark-green {
    color: darkgreen;
    font-weight: 600;
  }
  .timestamp{
    color: chocolate;
    font-weight: 600;
  }
</style>

<script>
  function toggleAccelerometerValues(element) {
    const axisValues = element.parentElement.nextElementSibling;
    const arrow = element.querySelector('.arrow');
    element.parentElement.classList.toggle('open');
    const lis = axisValues.querySelectorAll('li');
    lis.forEach(li => {
      li.style.display = li.style.display === 'none' ? 'list-item' : 'none';
    });
  }

  function toggleGyroscopeValues(element) {
    const axisValues = element.parentElement.nextElementSibling;
    const arrow = element.querySelector('.arrow');
    element.parentElement.classList.toggle('open');
    const lis = axisValues.querySelectorAll('li');
    lis.forEach(li => {
      li.style.display = li.style.display === 'none' ? 'list-item' : 'none';
    });
  }

function formatTimestamps() {
  const timestamps = document.querySelectorAll('.timestamp');
  timestamps.forEach(timestamp => {
    const originalTimestamp = timestamp.innerText;
    const formattedTimestamp = formatTimestamp(originalTimestamp);
    timestamp.innerText = formattedTimestamp;
  });
}

function formatTimestamp(timestamp) {
  const dateObj = new Date(timestamp);
  
  const days = ['NEDELJA', 'PONEDELJEK', 'TOREK', 'SREDA', 'ČETRTEK', 'PETEK', 'SOBOTA'];
  const day = days[dateObj.getDay()];
  
  const month = dateObj.getMonth() + 1;
  const year = dateObj.getFullYear();
  
  const formattedTimestamp = `${day}, ${dateObj.getDate()}.${month}.${year} - ${formatTime(dateObj)}`;
  
  return formattedTimestamp;
}

function formatTime(dateObj) {
  const hours = dateObj.getHours();
  const minutes = dateObj.getMinutes();
  
  const formattedHours = hours.toString().padStart(2, '0');
  const formattedMinutes = minutes.toString().padStart(2, '0');
  
  const formattedTime = `${formattedHours}:${formattedMinutes}`;
  
  return formattedTime;
}

  // JavaScript logic to change rating color based on its value
  const ratings = document.querySelectorAll('.rating');
  ratings.forEach(rating => {
    const value = parseInt(rating.innerText);
    if (value >= 0 && value <= 25) {
      rating.classList.add('dark-red');
    } else if (value >= 26 && value <= 50) {
      rating.classList.add('red');
    } else if (value >= 51 && value <= 75) {
      rating.classList.add('yellow');
    } else if (value >= 76 && value <= 90) {
      rating.classList.add('green');
    } else if (value >= 91 && value <= 100) {
      rating.classList.add('dark-green');
    }
  });

  formatTimestamps();
</script>
